ext.deps = [:]

def versions = [
        androidGradlePlugin: '3.3.1',
        kotlin             : "1.3.20",
        constraintLayout   : "1.1.3",
        appcompat          : "1.0.2",
        location           : "16.0.0",
        coreTesting        : "1.0.0",
        coroutines         : "1.1.0",
        espresso           : "3.1.1",
        dagger             : "2.20",
        retrofit           : "2.3.0",
        okhttp             : "3.9.1",
        junit              : "4.12",
        truth              : "0.42",
        lifecycle          : "2.0.0",
        material           : "1.0.0",
        recyclerView       : "1.0.0",
        picasso            : "2.71828",
        chuck              : "1.1.0",
        mockito            : "2.24.5",
        robolectric        : "4.2"
]

def deps = [:]

def build = [
        compileSdkVersion  : 28,
        minSdkVersion      : 19,
        targetSdkVersion   : 28,
        androidGradlePlugin: "com.android.tools.build:gradle:$versions.androidGradlePlugin",
        kotlinGradlePlugin : "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
]
deps.build = build

def core = [
        appcompat       : "androidx.appcompat:appcompat:$versions.appcompat",
        constraintLayout: "androidx.constraintlayout:constraintlayout:$versions.constraintLayout",
        lifecycle       : "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle",
        recyclerView    : "androidx.recyclerview:recyclerview:$versions.recyclerView",
        material        : "com.google.android.material:material:$versions.material",
        kotlinStdLib    : "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$versions.kotlin"
]
deps.core = core

def playServices = [
        location: "com.google.android.gms:play-services-location:$versions.location"
]
deps.playServices = playServices

def test = [
        //        core           : "androidx.arch.core:core-testing:$versions.coreTesting",
        core           : "androidx.test:core:$versions.coreTesting",
        espresso       : "androidx.test.espresso:espresso-contrib:$versions.espresso",
        espressoCore   : "androidx.test.espresso:espresso-core:$versions.espresso",
        espressoIntents: "androidx.test.espresso:espresso-intents:$versions.espresso",
        junit          : "junit:junit:$versions.junit",
        truth          : "com.google.truth:truth:$versions.truth",
        mockito        : "org.mockito:mockito-core:$versions.mockito",
        robolectric    : "org.robolectric:robolectric:$versions.robolectric",
]
deps.test = test

def dagger = [
        android         : "com.google.dagger:dagger-android:$versions.dagger",
        androidSupport  : "com.google.dagger:dagger-android-support:$versions.dagger",
        androidProcessor: "com.google.dagger:dagger-android-processor:$versions.dagger",
        compiler        : "com.google.dagger:dagger-compiler:$versions.dagger"
]
deps.dagger = dagger

def retrofit = [
        core         : "com.squareup.retrofit2:retrofit:$versions.retrofit",
        gsonConverter: "com.squareup.retrofit2:converter-gson:$versions.retrofit"
]
deps.retrofit = retrofit

def okhttp = [
        core: "com.squareup.okhttp3:okhttp:$versions.okhttp"
]
deps.okhttp = okhttp

def coroutines = [
        core   : "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.coroutines",
        android: "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutines"
]
deps.coroutines = coroutines

deps.picasso = "com.squareup.picasso:picasso:$versions.picasso"

def chuck = [
        debug  : "com.readystatesoftware.chuck:library:$versions.chuck",
        release: "com.readystatesoftware.chuck:library-no-op:$versions.chuck"
]
deps.chuck = chuck

ext.deps = deps